(function (_0x10cd21, _0x1f0431) { const _0x410cc8 = _0x3424, _0x35c373 = _0x10cd21(); while (!![]) { try { const _0x1e517b = -parseInt(_0x410cc8(0x9b)) / 0x1 * (-parseInt(_0x410cc8(0xbd)) / 0x2) + parseInt(_0x410cc8(0xa6)) / 0x3 * (parseInt(_0x410cc8(0xb6)) / 0x4) + parseInt(_0x410cc8(0xd3)) / 0x5 * (-parseInt(_0x410cc8(0xa7)) / 0x6) + parseInt(_0x410cc8(0xc8)) / 0x7 + parseInt(_0x410cc8(0xcc)) / 0x8 + parseInt(_0x410cc8(0xa9)) / 0x9 * (parseInt(_0x410cc8(0xd1)) / 0xa) + -parseInt(_0x410cc8(0xa1)) / 0xb; if (_0x1e517b === _0x1f0431) break; else _0x35c373['push'](_0x35c373['shift']()); } catch (_0x4358c0) { _0x35c373['push'](_0x35c373['shift']()); } } }(_0x2980, 0xc89fd)); import { existsSync, unlinkSync, readdir } from 'fs'; import { join } from 'path'; function _0x2980() { const _0x4b4abe = ['/contacts/', 'creds.update', 'close', 'isDirectory', 'sessions', 'isLegacy', 'includes', 'sendMessage', 'exists', '13917eFJdln', 'insertIfAbsent', 'logout', 'rmdirSync', 'has', 'startsWith', '49599616cpQYhv', 'log', 'default', 'warn', 'onWhatsApp', '57441bEWPBE', '14394OgWOST', 'undefined', '59994dVqQyW', 'Running\x20cleanup\x20before\x20exit.', 'groupMetadata', 'key', 'contacts.update', '_store', 'chats.set', 'forEach', 'ubuntu', 'md_', 'Chrome', 'lstatSync', 'reject', '292xREWZZ', 'chats', 'readdir', 'get', 'readdirSync', 'filter', 'loggedOut', '62cpiXor', 'set', 'replace', 'readFromFile', 'existsSync', 'bind', 'headersSent', 'type', 'delete', '.json', 'output', '11201386cKXEKB', 'connection.update', 'checked', 'endsWith', '6718240CUXIhs', 'writeToFile', '@g.us', 'Reconnecting...', 'store', '2460JnPkol', 'restartRequired', '1205eeueyl', '@s.whatsapp.net', 'DELETE\x20FROM\x20instance\x20WHERE\x20client_id\x20=\x20?']; _0x2980 = function () { return _0x4b4abe; }; return _0x2980(); } import _0x4f4db2 from 'pino'; import _0x62968, { makeInMemoryStore, Browsers, DisconnectReason, delay, useMultiFileAuthState } from '@whiskeysockets/baileys'; import { toDataURL } from 'qrcode'; import _0x26b377 from '../dirname.js'; import _0x34dc25 from '../response.js'; import _0x9ef5a3 from '../database/dbpromise.js'; import { webhook } from '../controllers/botController.js'; function _0x3424(_0x2043e7, _0x3a2c5c) { const _0x298009 = _0x2980(); return _0x3424 = function (_0x3424ef, _0x2cf0cd) { _0x3424ef = _0x3424ef - 0x94; let _0x3d7940 = _0x298009[_0x3424ef]; return _0x3d7940; }, _0x3424(_0x2043e7, _0x3a2c5c); } import { createJsonFile, deleteFileIfExists } from '../functions/function.js'; import _0x57e872 from 'fs'; import _0x4d88b3 from 'path'; const sessions = new Map(), retries = new Map(), sessionsDir = (_0x4684fb = '') => { const _0x3f3c00 = _0x3424; return join(_0x26b377, _0x3f3c00(0x96), _0x4684fb ? _0x4684fb + _0x3f3c00(0xc6) : ''); }, isSessionExists = _0x11b598 => { const _0x20740f = _0x3424; return sessions[_0x20740f(0x9f)](_0x11b598); }, isSessionFileExists = _0xc203fe => { return existsSync(sessionsDir(_0xc203fe)); }, shouldReconnect = _0x17f878 => { const _0x5521a3 = _0x3424; let _0x4950f7 = parseInt(0x5), _0x4398ea = retries[_0x5521a3(0xb9)](_0x17f878) ?? 0x0; _0x4950f7 = _0x4950f7 < 0x1 ? 0x1 : _0x4950f7; if (_0x4398ea < _0x4950f7) return ++_0x4398ea, console[_0x5521a3(0xa2)](_0x5521a3(0xcf), { 'attempts': _0x4398ea, 'sessionId': _0x17f878 }), retries['set'](_0x17f878, _0x4398ea), !![]; return ![]; }, createSession = async (_0x3dc175, _0x2aaccd = ![], _0x2490ab = null, _0x949898) => { const _0x6fb75a = _0x3424, _0x5b73b5 = _0x6fb75a(0xb2) + _0x3dc175, _0x350e6b = _0x4f4db2({ 'level': _0x6fb75a(0xa4) }), _0x12e8a3 = makeInMemoryStore({ 'logger': _0x350e6b }), { state: _0x572bc7, saveCreds: _0x4f7375 } = await useMultiFileAuthState(sessionsDir(_0x5b73b5)), _0x5e29b1 = { 'auth': _0x572bc7, 'printQRInTerminal': ![], 'logger': _0x350e6b, 'browser': Browsers[_0x6fb75a(0xb1)](_0x6fb75a(0xb3)), 'syncFullHistory': !![] }, _0x3df1fa = _0x62968[_0x6fb75a(0xa3)](_0x5e29b1); !_0x2aaccd && (_0x12e8a3[_0x6fb75a(0xc0)](sessionsDir(_0x3dc175 + _0x6fb75a(0xae))), _0x12e8a3[_0x6fb75a(0xc2)](_0x3df1fa['ev'])), sessions[_0x6fb75a(0xbe)](_0x3dc175, { ..._0x3df1fa, 'store': _0x12e8a3, 'isLegacy': _0x2aaccd }), _0x3df1fa['ev']['on'](_0x6fb75a(0xd7), _0x4f7375), _0x3df1fa['ev']['on'](_0x6fb75a(0xaf), ({ chats: _0x39b817 }) => { const _0x20c3c0 = _0x6fb75a; _0x2aaccd && _0x12e8a3['chats'][_0x20c3c0(0x9c)](..._0x39b817); }), _0x3df1fa['ev']['on'](_0x6fb75a(0xad), () => { createJsonFile(_0x3dc175, Object['values'](_0x12e8a3['contacts'])); }), _0x3df1fa['ev']['on']('messages.upsert', async _0x2bbf0c => { const _0x1d15eb = _0x6fb75a, _0x460795 = _0x2bbf0c['messages'][0x0]; !_0x460795[_0x1d15eb(0xac)]['fromMe'] && _0x2bbf0c[_0x1d15eb(0xc4)] === 'notify' && (await delay(0x3e8), await webhook(_0x2bbf0c, _0x3df1fa, _0x3dc175)); }), _0x3df1fa['ev']['on'](_0x6fb75a(0xc9), async _0x24990f => { const _0x5a5e47 = _0x6fb75a, { connection: _0x1de74e, lastDisconnect: _0x22fa1b } = _0x24990f, _0x53d71e = _0x22fa1b?.['error']?.[_0x5a5e47(0xc7)]?.['statusCode']; console[_0x5a5e47(0xa2)]('message', _0x1de74e); _0x1de74e === 'open' && retries[_0x5a5e47(0xc5)](_0x3dc175); if (_0x1de74e === _0x5a5e47(0x94)) { if (_0x53d71e === DisconnectReason[_0x5a5e47(0xbc)] || !shouldReconnect(_0x3dc175)) return _0x2490ab && !_0x2490ab[_0x5a5e47(0xc3)] && _0x34dc25(_0x2490ab, 0x1f4, ![], 'Unable\x20to\x20create\x20session.'), deleteSession(_0x3dc175, _0x2aaccd); setTimeout(() => { createSession(_0x3dc175, _0x2aaccd, _0x2490ab); }, _0x53d71e === DisconnectReason[_0x5a5e47(0xd2)] ? 0x0 : parseInt(0x1388)); } if (_0x24990f['qr']) { if (_0x2490ab && !_0x2490ab[_0x5a5e47(0xc3)]) try { const _0x168dff = await toDataURL(_0x24990f['qr']); _0x34dc25(_0x2490ab, 0xc8, !![], 'QR\x20code\x20received,\x20please\x20scan\x20the\x20QR\x20code.', { 'qr': _0x168dff }); return; } catch { _0x34dc25(_0x2490ab, 0x1f4, ![], 'Unable\x20to\x20create\x20QR\x20code.'); } try { await _0x3df1fa[_0x5a5e47(0x9d)](); } catch { } finally { deleteSession(_0x3dc175, _0x2aaccd); } } }); }, getSession = _0x1d3c05 => { const _0x383cda = _0x3424; return sessions[_0x383cda(0xb9)](_0x1d3c05) ?? null; }, deleteDirectory = _0x5bf769 => { const _0xab2f58 = _0x3424; _0x57e872[_0xab2f58(0xc1)](_0x5bf769) && (_0x57e872[_0xab2f58(0xba)](_0x5bf769)[_0xab2f58(0xb0)](_0x332c32 => { const _0x891513 = _0xab2f58, _0x23d97e = _0x5bf769 + '/' + _0x332c32; _0x57e872[_0x891513(0xb4)](_0x23d97e)[_0x891513(0x95)]() ? deleteDirectory(_0x23d97e) : _0x57e872['unlinkSync'](_0x23d97e); }), _0x57e872[_0xab2f58(0x9e)](_0x5bf769)); }, deleteSession = async (_0x4e7877, _0x29b096 = ![]) => { const _0x5433c2 = _0x3424, _0x4dd29f = _0x5433c2(0xb2) + _0x4e7877, _0x24a62b = _0x4e7877 + _0x5433c2(0xae); await _0x9ef5a3(_0x5433c2(0xd5), [_0x4e7877]); const _0x1667ae = process['cwd'](); deleteFileIfExists(_0x1667ae + _0x5433c2(0xd6) + _0x4e7877 + _0x5433c2(0xc6)), isSessionFileExists(_0x4dd29f) && deleteDirectory(sessionsDir(_0x4dd29f)), isSessionFileExists(_0x24a62b) && unlinkSync(sessionsDir(_0x24a62b)), sessions['delete'](_0x4e7877), retries['delete'](_0x4e7877); }, getChatList = (_0x1ddc7f, _0xf9383d = ![]) => { const _0x41b3a3 = _0x3424, _0x341cbb = _0xf9383d ? _0x41b3a3(0xce) : _0x41b3a3(0xd4); return getSession(_0x1ddc7f)['store'][_0x41b3a3(0xb7)][_0x41b3a3(0xbb)](_0x4966c8 => { const _0x3f795a = _0x41b3a3; return _0x4966c8['id'][_0x3f795a(0xcb)](_0x341cbb); }); }, isExists = async (_0x4cd64b, _0x16180c, _0x5cf0f4 = ![]) => { const _0x2a0918 = _0x3424; console[_0x2a0918(0xa2)]({ 'jid': _0x16180c }); try { let _0x4cb53d; if (_0x5cf0f4) return _0x4cb53d = await _0x4cd64b[_0x2a0918(0xab)](_0x16180c), Boolean(_0x4cb53d['id']); if (_0x4cd64b[_0x2a0918(0x97)]) _0x4cb53d = await _0x4cd64b[_0x2a0918(0xa5)](_0x16180c); else { ;[_0x4cb53d] = await _0x4cd64b[_0x2a0918(0xa5)](_0x16180c); if (typeof _0x4cb53d === _0x2a0918(0xa8)) { console[_0x2a0918(0xa2)](_0x2a0918(0xca)); const _0x105c95 = _0x16180c[_0x2a0918(0xbf)]('@s.whatsapp.net', '');[_0x4cb53d] = await _0x4cd64b[_0x2a0918(0xa5)]('+' + _0x105c95); } } return _0x4cb53d[_0x2a0918(0x9a)]; } catch { return ![]; } }, sendMessage = async (_0x19ebc9, _0x349829, _0x33b6a4) => { const _0x38150a = _0x3424; try { return await delay(0x3e8), _0x19ebc9[_0x38150a(0x99)](_0x349829, _0x33b6a4); } catch { return Promise[_0x38150a(0xb5)](null); } }, getGroupData = async (_0x5b90a2, _0x4b98be) => { try { const _0x2c52b7 = await _0x5b90a2['groupMetadata'](_0x4b98be); return _0x2c52b7; } catch { return Promise['reject'](null); } }, formatPhone = _0x56dd24 => { const _0x18dc83 = _0x3424; if (_0x56dd24['endsWith'](_0x18dc83(0xd4))) return _0x56dd24; let _0x5afc90 = _0x56dd24['replace'](/\D/g, ''); return _0x5afc90 += '@s.whatsapp.net'; }, formatGroup = _0x1c338f => { const _0xd0ebb0 = _0x3424; if (_0x1c338f['endsWith'](_0xd0ebb0(0xce))) return _0x1c338f; let _0x34e7d9 = _0x1c338f[_0xd0ebb0(0xbf)](/[^\d-]/g, ''); return _0x34e7d9 += _0xd0ebb0(0xce); }, cleanup = () => { const _0x3eb11d = _0x3424; console['log'](_0x3eb11d(0xaa)), sessions[_0x3eb11d(0xb0)]((_0x70117b, _0x1ac9de) => { const _0x561418 = _0x3eb11d; !_0x70117b[_0x561418(0x97)] && _0x70117b[_0x561418(0xd0)][_0x561418(0xcd)](sessionsDir(_0x1ac9de + '_store')); }); }, init = () => { const _0x297a8e = _0x3424, _0xaf8bb6 = _0x4d88b3['join'](_0x26b377, 'sessions'); _0x57e872[_0x297a8e(0xb8)](_0xaf8bb6, (_0x2f4d30, _0x4cc39b) => { const _0x3ce29e = _0x297a8e; if (_0x2f4d30) throw _0x2f4d30; for (const _0x50c078 of _0x4cc39b) { if (!_0x50c078[_0x3ce29e(0xcb)](_0x3ce29e(0xc6)) || !_0x50c078[_0x3ce29e(0xa0)]('md_') || _0x50c078[_0x3ce29e(0x98)](_0x3ce29e(0xae))) continue; const _0x45adb1 = _0x50c078[_0x3ce29e(0xbf)](_0x3ce29e(0xc6), ''), _0x12dbe9 = _0x45adb1['split']('_', 0x1)[0x0] !== 'md', _0x4a7f08 = _0x45adb1['substring'](_0x12dbe9 ? 0x7 : 0x3); createSession(_0x4a7f08, _0x12dbe9); } }); }; export { isSessionExists, createSession, getSession, deleteSession, getChatList, isExists, sendMessage, formatPhone, formatGroup, cleanup, init, getGroupData };