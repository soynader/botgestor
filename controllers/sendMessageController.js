(function (_0x1cea8e, _0x5b3649) { const _0x7003a8 = _0x44d2, _0x4a1f2c = _0x1cea8e(); while (!![]) { try { const _0x4ef918 = -parseInt(_0x7003a8(0x15e)) / 0x1 + -parseInt(_0x7003a8(0x168)) / 0x2 + -parseInt(_0x7003a8(0x128)) / 0x3 + parseInt(_0x7003a8(0x138)) / 0x4 + -parseInt(_0x7003a8(0x155)) / 0x5 + -parseInt(_0x7003a8(0x15a)) / 0x6 * (-parseInt(_0x7003a8(0x12e)) / 0x7) + parseInt(_0x7003a8(0x131)) / 0x8 * (parseInt(_0x7003a8(0x14e)) / 0x9); if (_0x4ef918 === _0x5b3649) break; else _0x4a1f2c['push'](_0x4a1f2c['shift']()); } catch (_0x320af9) { _0x4a1f2c['push'](_0x4a1f2c['shift']()); } } }(_0xce17, 0x3f0de)); function _0x44d2(_0x2b89fe, _0x5b24ad) { const _0xce1779 = _0xce17(); return _0x44d2 = function (_0x44d2d3, _0x394a53) { _0x44d2d3 = _0x44d2d3 - 0x125; let _0x43ef66 = _0xce1779[_0x44d2d3]; return _0x43ef66; }, _0x44d2(_0x2b89fe, _0x5b24ad); } import { sendMessageMain, saveAsTemplet, addMessageLog, sendMediaMessage, checkLeftMessage, runCampaign } from '../functions/function.js'; import _0x55d06b from '../database/dbpromise.js'; import _0x308f69 from 'moment'; import { getSession, formatPhone, sendMessage, isExists, getGroupData } from '../middlewares/req.js'; const sendMessageFunction = async (_0x7a6c1d, _0x27ed33) => { const _0x21d84a = _0x44d2; try { if (!_0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x132)] || !_0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x147)] || !_0x7a6c1d[_0x21d84a(0x167)]['client_id']) return _0x27ed33[_0x21d84a(0x14a)]({ 'msg': _0x21d84a(0x125) }); if (_0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x162)] && !_0x7a6c1d['body'][_0x21d84a(0x139)]) { await saveAsTemplet(_0x7a6c1d[_0x21d84a(0x154)][_0x21d84a(0x152)], _0x7a6c1d['body']['name'] || 'NA', _0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x132)], _0x7a6c1d['body'][_0x21d84a(0x13f)] || 'NA'); if (_0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x153)]) return _0x27ed33[_0x21d84a(0x14a)]({ 'msg': _0x21d84a(0x143), 'success': !![] }); } await addMessageLog(_0x7a6c1d['decode'][_0x21d84a(0x152)], _0x7a6c1d['body'][_0x21d84a(0x147)], _0x7a6c1d['body']['content'], _0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x13f)] || 'NA', _0x21d84a(0x149)), await sendMessageMain(_0x7a6c1d[_0x21d84a(0x167)]['client_id'], _0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x147)], _0x7a6c1d[_0x21d84a(0x167)][_0x21d84a(0x132)], _0x7a6c1d['decode'][_0x21d84a(0x152)]), _0x27ed33[_0x21d84a(0x14a)]({ 'msg': _0x21d84a(0x14c), 'success': !![] }); } catch (_0x4f72e3) { _0x27ed33[_0x21d84a(0x14a)]({ 'err': _0x4f72e3, 'msg': 'server\x20error' }), console[_0x21d84a(0x157)](_0x4f72e3); } }, sendMessageWithMedia = async (_0x4503af, _0xfc8f23) => { const _0xe4f9e3 = _0x44d2; try { console['log'](_0xe4f9e3(0x16f)); if (!_0x4503af['body'][_0xe4f9e3(0x147)] || !_0x4503af[_0xe4f9e3(0x167)][_0xe4f9e3(0x160)]) return _0xfc8f23[_0xe4f9e3(0x14a)]({ 'msg': _0xe4f9e3(0x15d) }); if (_0x4503af[_0xe4f9e3(0x167)][_0xe4f9e3(0x139)] === 'false') { if (!_0x4503af[_0xe4f9e3(0x12f)][_0xe4f9e3(0x15f)]) return _0xfc8f23['json']({ 'msg': 'Please\x20send\x20file' }); } let _0x5b1b3d = ''; if (_0x4503af[_0xe4f9e3(0x167)][_0xe4f9e3(0x139)] === _0xe4f9e3(0x158)) _0x5b1b3d = _0x4503af[_0xe4f9e3(0x167)]['filename']; else { if (_0x4503af[_0xe4f9e3(0x12f)]) { if (_0x4503af['files']['file'] !== undefined) { const _0x134234 = _0x4503af['files'][_0xe4f9e3(0x15f)]; _0x5b1b3d = ('' + Math[_0xe4f9e3(0x15c)]())[_0xe4f9e3(0x144)](0x2, 0x7) + Date[_0xe4f9e3(0x159)]() + _0x134234[_0xe4f9e3(0x136)]; const _0x4a9b48 = process[_0xe4f9e3(0x150)](); _0x134234['mv'](_0x4a9b48 + _0xe4f9e3(0x172) + _0x5b1b3d, _0x371809 => { const _0x583ebe = _0xe4f9e3; if (_0x371809) return console[_0x583ebe(0x157)](_0x371809), _0xfc8f23[_0x583ebe(0x14a)]({ 'err': _0x371809 }); }); } else return _0xfc8f23[_0xe4f9e3(0x14a)]({ 'msg': 'Please\x20send\x20file' }); } } const _0x373c52 = await sendMediaMessage(_0x4503af[_0xe4f9e3(0x167)][_0xe4f9e3(0x160)], _0x4503af[_0xe4f9e3(0x167)]['mobile'], _0x5b1b3d, _0x4503af[_0xe4f9e3(0x167)][_0xe4f9e3(0x141)] == _0xe4f9e3(0x13a) ? '' : _0x4503af['body'][_0xe4f9e3(0x141)], _0x4503af['decode'][_0xe4f9e3(0x152)], _0x4503af['body'][_0xe4f9e3(0x13f)], _0x4503af); _0xfc8f23[_0xe4f9e3(0x14a)]({ 'msg': _0x373c52['msg'], 'success': !![] }); } catch (_0x4b9562) { console[_0xe4f9e3(0x157)](_0x4b9562), _0xfc8f23[_0xe4f9e3(0x14a)]({ 'msg': _0xe4f9e3(0x15b), 'err': _0x4b9562 }); } }, sendBulkTask = async (_0x965dd1, _0x2ffd7c) => { const _0x672c2b = _0x44d2; try { function _0x4e05e3(_0x346a65) { return new Promise(_0x2cd5dd => { const _0x712449 = _0x44d2, _0x397956 = new Date(_0x346a65)[_0x712449(0x130)](), _0x40451b = Date[_0x712449(0x159)](), _0x5a78a2 = Math[_0x712449(0x169)](_0x397956 - _0x40451b, 0x0); setTimeout(_0x2cd5dd, _0x5a78a2); }); } const _0x112601 = Date[_0x672c2b(0x159)](); _0x965dd1['body'][_0x672c2b(0x16b)] === 'manual' && (_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x145)] = 'manual\x20message'); if (!_0x965dd1['body'][_0x672c2b(0x13d)] || !_0x965dd1['body'][_0x672c2b(0x145)] || !_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x134)] || _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x160)][_0x672c2b(0x16e)] < 0x1) return _0x2ffd7c[_0x672c2b(0x14a)]({ 'msg': _0x672c2b(0x16d) }); if (_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x160)]?.['length'] > 0x1) { const _0x324204 = await _0x55d06b('SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', _0x965dd1[_0x672c2b(0x154)]['uid']); if (_0x324204[0x0][_0x672c2b(0x12b)] !== 0x1) return _0x2ffd7c[_0x672c2b(0x14a)]({ 'msg': _0x672c2b(0x164) }); } const _0x5df7c6 = await _0x55d06b(_0x672c2b(0x165), [_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x134)], _0x965dd1[_0x672c2b(0x154)][_0x672c2b(0x152)]]), _0x2d5ef4 = await checkLeftMessage(_0x965dd1[_0x672c2b(0x154)][_0x672c2b(0x152)]), _0x4d9389 = await _0x55d06b(_0x672c2b(0x16c), [_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x145)]]); if (_0x2d5ef4[_0x672c2b(0x137)] < _0x5df7c6[_0x672c2b(0x16e)]) return _0x2ffd7c['json']({ 'msg': 'You\x20have\x20' + _0x2d5ef4[_0x672c2b(0x137)] + _0x672c2b(0x16a) + _0x5df7c6[_0x672c2b(0x16e)] + _0x672c2b(0x14b) }); if (!_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x156)]) { const _0x427611 = new Date(); _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x14d)] = _0x427611; } console[_0x672c2b(0x157)](_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x14d)]), await _0x55d06b(_0x672c2b(0x13b), [_0x965dd1[_0x672c2b(0x154)][_0x672c2b(0x152)], _0x112601, _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x13d)], _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x145)], _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x134)], _0x672c2b(0x140) + _0x308f69(_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x14d)])[_0x672c2b(0x161)]('DD/MM/YY\x20hh:mm')]); const _0x5a3c8d = _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x16b)] == _0x672c2b(0x127) ? { 'text': _0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x173)] } : JSON[_0x672c2b(0x129)](_0x4d9389[0x0]?.[_0x672c2b(0x132)]); _0x2ffd7c[_0x672c2b(0x14a)]({ 'msg': _0x672c2b(0x171), 'success': !![] }), await _0x4e05e3(_0x965dd1[_0x672c2b(0x167)][_0x672c2b(0x14d)]); const _0x5d462d = _0x965dd1['body'][_0x672c2b(0x160)]?.[_0x672c2b(0x148)](_0x4c964a => _0x4c964a['client_id']), _0x57ef0e = await runCampaign(_0x965dd1[_0x672c2b(0x154)]['uid'], _0x5a3c8d, _0x5df7c6, _0x5d462d, _0x965dd1, _0x112601); await _0x55d06b(_0x672c2b(0x170), [_0x57ef0e[_0x672c2b(0x12d)], _0x112601]); } catch (_0x31c450) { console[_0x672c2b(0x157)](_0x31c450); } }, sendToGroup = async (_0x3ac60e, _0x2a3279) => { const _0x260fc5 = _0x44d2; try { function _0x4aa05b(_0x401307) { const _0x49fe38 = _0x44d2, _0xfd597c = /@tagall/i; return _0xfd597c[_0x49fe38(0x135)](_0x401307); } if (_0x3ac60e['body'][_0x260fc5(0x13f)] == _0x260fc5(0x13f)) { if (_0x4aa05b(_0x3ac60e['body'][_0x260fc5(0x173)])) { let _0x2ff2c3 = []; const _0x18c4ba = getSession(_0x3ac60e['body']['client_id']); let _0x1966b7 = _0x3ac60e['body'][_0x260fc5(0x173)] + '\x0a\x0a' || ''; const _0x329541 = await getGroupData(_0x18c4ba, _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x13c)]?.['id']); _0x2ff2c3 = _0x329541?.['participants'], _0x2ff2c3[_0x260fc5(0x12c)](_0x19828d => { const _0x4b9a92 = _0x260fc5; _0x1966b7 += '@' + _0x19828d['id'][_0x4b9a92(0x151)]('@')[0x0] + '\x20'; }); let _0x467772 = []; for (let _0x45cbea of _0x329541?.[_0x260fc5(0x133)]) { _0x467772[_0x260fc5(0x166)](_0x45cbea['id']); } await sendMessage(_0x18c4ba, _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x13c)]?.['id'], { 'text': _0x1966b7['replace'](_0x260fc5(0x163), ''), 'mentions': _0x467772 }), await addMessageLog(_0x3ac60e['decode'][_0x260fc5(0x152)], _0x3ac60e[_0x260fc5(0x167)]['groupData']?.['name'] || 'NA', { 'text': _0x1966b7 }, _0x3ac60e['body'][_0x260fc5(0x13f)] || 'NA', _0x260fc5(0x13e)); const _0x20d96e = await _0x55d06b(_0x260fc5(0x14f), [_0x3ac60e[_0x260fc5(0x154)][_0x260fc5(0x152)]]), _0x1fb263 = parseInt(_0x20d96e[0x0][_0x260fc5(0x142)]), _0x4d4239 = _0x1fb263 - 0x1; await _0x55d06b(_0x260fc5(0x12a), [_0x4d4239, _0x3ac60e['decode'][_0x260fc5(0x152)]]), _0x2a3279[_0x260fc5(0x14a)]({ 'success': !![], 'msg': _0x260fc5(0x126) }); } else { const _0x4bd4a7 = getSession(_0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x160)]); await sendMessage(_0x4bd4a7, _0x3ac60e['body']['groupData']?.['id'], { 'text': _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x173)] }), await addMessageLog(_0x3ac60e[_0x260fc5(0x154)]['uid'], _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x13c)]?.[_0x260fc5(0x136)], { 'text': _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x173)] }, _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x13f)] || 'NA', _0x260fc5(0x13e)); const _0x49913c = await _0x55d06b(_0x260fc5(0x14f), [_0x3ac60e['decode'][_0x260fc5(0x152)]]), _0x3676d7 = parseInt(_0x49913c[0x0]['msglimit']), _0xec2c45 = _0x3676d7 - 0x1; await _0x55d06b(_0x260fc5(0x12a), [_0xec2c45, _0x3ac60e[_0x260fc5(0x154)][_0x260fc5(0x152)]]), _0x2a3279[_0x260fc5(0x14a)]({ 'success': !![], 'msg': 'Message\x20was\x20sent' }); } } else { const _0x214306 = getSession(_0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x160)]); await sendMessage(_0x214306, _0x3ac60e['body'][_0x260fc5(0x13c)]?.['id'], _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x146)]), await addMessageLog(_0x3ac60e[_0x260fc5(0x154)][_0x260fc5(0x152)], _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x13c)]?.['name'], _0x3ac60e[_0x260fc5(0x167)][_0x260fc5(0x146)], _0x3ac60e[_0x260fc5(0x167)]['type'] || 'NA', _0x260fc5(0x13e)); const _0x5f5273 = await _0x55d06b(_0x260fc5(0x14f), [_0x3ac60e[_0x260fc5(0x154)][_0x260fc5(0x152)]]), _0x2bcc13 = parseInt(_0x5f5273[0x0][_0x260fc5(0x142)]), _0x5087f5 = _0x2bcc13 - 0x1; await _0x55d06b(_0x260fc5(0x12a), [_0x5087f5, _0x3ac60e[_0x260fc5(0x154)]['uid']]), _0x2a3279[_0x260fc5(0x14a)]({ 'success': !![], 'msg': _0x260fc5(0x126) }); } } catch (_0x4591ce) { console[_0x260fc5(0x157)](_0x4591ce), _0x2a3279[_0x260fc5(0x14a)]({ 'err': _0x4591ce, 'msg': _0x260fc5(0x15b) }); } }, getGroupsData = async (_0x37b447, _0x1bee6e) => { const _0x239234 = _0x44d2; try { if (!_0x37b447[_0x239234(0x167)]['client_id']) return _0x1bee6e[_0x239234(0x14a)]({ 'msg': 'No\x20client\x20ID\x20found' }); const _0x41f3ba = getSession(_0x37b447[_0x239234(0x167)][_0x239234(0x160)]), _0x2428be = await getGroupData(_0x41f3ba, _0x37b447[_0x239234(0x167)]['jid']); _0x1bee6e[_0x239234(0x14a)]({ 'data': _0x2428be, 'success': !![] }); } catch (_0x3ef5f9) { console['log'](_0x3ef5f9), _0x1bee6e[_0x239234(0x14a)]({ 'err': _0x3ef5f9, 'msg': _0x239234(0x15b) }); } }; function _0xce17() { const _0x3eea0f = ['INSERT\x20INTO\x20campaign\x20(uid,\x20campaign_id,\x20name,\x20templet_id,\x20phonebook_name,\x20status\x20)\x20VALUES\x20(?,?,?,?,?,?)\x20', 'groupData', 'campaignName', 'group', 'type', 'scheduled\x20for\x20', 'message', 'msglimit', 'The\x20templet\x20was\x20saved', 'substring', 'templetID', 'selectedTemplet', 'mobile', 'map', 'single', 'json', '\x20please\x20upgrade\x20or\x20reduce\x20numbers', 'The\x20message\x20was\x20sent', 'scheduleTimestamp', '1984041FNOxvZ', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'cwd', 'split', 'uid', 'onlySave', 'decode', '258165qGVblp', 'schedule', 'log', 'true', 'now', '18zWaAsp', 'server\x20error', 'random', 'Please\x20send\x20required\x20fields', '95324pIdUJc', 'file', 'client_id', 'format', 'saveAsTemplet', '@tagall', 'Your\x20plan\x20does\x20not\x20allow\x20yout\x20to\x20use\x20multi\x20instance\x20please\x20use\x20one\x20instance', 'SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20phonebook_name\x20=\x20?\x20and\x20uid\x20=\x20?\x20', 'push', 'body', '210432PNPcCP', 'max', '\x20left\x20in\x20your\x20account\x20and\x20your\x20templet\x20has\x20', 'sending_type', 'SELECT\x20*\x20FROM\x20templet\x20WHERE\x20id\x20=\x20?', 'please\x20send\x20all\x20required\x20fields', 'length', 'hit', 'UPDATE\x20campaign\x20SET\x20status\x20=\x20?\x20WHERE\x20campaign_id\x20=\x20?\x20', 'Your\x20campaign\x20was\x20scheduled', '/client/public/media/', 'typedMsg', 'pelase\x20send\x20all\x20required\x20fields', 'Message\x20was\x20sent', 'manual', '1355661ZOUgTj', 'parse', 'UPDATE\x20user\x20SET\x20msglimit\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'allow_multi_instance', 'forEach', 'msg', '662347PkcjRA', 'files', 'getTime', '8WBPxGh', 'content', 'participants', 'phoneBookName', 'test', 'name', 'msgLeft', '1832072wzOZRy', 'fromTemplet', 'null']; _0xce17 = function () { return _0x3eea0f; }; return _0xce17(); } export { sendMessageFunction, sendMessageWithMedia, sendBulkTask, sendToGroup, getGroupsData };